// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  user_id       Int         @id @default(autoincrement())
  username      String      @unique @db.VarChar(20)
  password      String      @db.VarChar(72)
  email         String      @db.VarChar(99)
  picture       String      @default("https://images.pexels.com/photos/415829/pexels-photo-415829.jpeg?auto=compress&cs=tinysrgb&w=800")
  status        String      @default("Hey there ! I am using app message")
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt

  // Relations
  conversations UserConversation[]
  messages      Message[]
}

model Conversation {
  id              Int      @id @default(autoincrement())
  username        String
  picture         String
  isGroup         Boolean  @default(false)
  latestMessage   Message? @relation("LatestMessageRelation", fields: [latestMessageId], references: [id])
  latestMessageId Int? @unique
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // Relations
  users    UserConversation[]
  messages Message[] @relation("ConversationMessages")
}

model Message {
  id             Int            @id @default(autoincrement())
  sender         User?          @relation(fields: [senderId], references: [user_id])
  senderId       Int?
  message        String
  conversation   Conversation?  @relation("ConversationMessages", fields: [conversationId], references: [id])
  conversationId Int?
  files          Json
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt

  // Relation
  latestMessageOf Conversation? @relation("LatestMessageRelation")
}

model UserConversation {
  id             Int          @id @default(autoincrement())
  user           User         @relation(fields: [userId], references: [user_id])
  userId         Int
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId Int

  @@unique([userId, conversationId])
}